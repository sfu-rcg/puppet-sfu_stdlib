# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
#
# str2hash.rb
#
require 'json'

# ---- original file header ----
#
# @summary
#   This converts a string to a hash. This attempt to convert strings that
#represent hashes, in any form, back to hash.
#
#
Puppet::Functions.create_function(:'sfu_stdlib::str2hash') do
  # @param arguments
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :arguments
  end


  def default_impl(*arguments)
    

    raise(Puppet::ParseError, "str2hash(): Wrong number of arguments " +
      "given (#{arguments.size} for 1)") if arguments.size < 1

    string = arguments[0]

    # If string is already Hash, return it
    if string.is_a?(Hash)
      return string
    end

    unless string.is_a?(String)
      raise(Puppet::ParseError, 'str2hash(): Requires either ' +
        'string to work with')
    end

    # If the string is a hash inside an array representation, we clear the array part
    string.sub!(/^\[(\{.*\})\]$/,'\1')

    # Transform object string symbols to quoted strings
    string.gsub!(/([{,]\s*):([^>\s]+)\s*=>/, '\1"\2"=>')
    
    # Transform object string numbers to quoted strings
    string.gsub!(/([{,]\s*)([0-9]+\.?[0-9]*)\s*=>/, '\1"\2"=>')
    
    # Transform object value symbols to quotes strings
    string.gsub!(/([{,]\s*)(".+?"|[0-9]+\.?[0-9]*)\s*=>\s*:([^,}\s]+\s*)/, '\1\2=>"\3"')
    
    # Transform array value symbols to quotes strings
    string.gsub!(/([\[,]\s*):([^,\]\s]+)/, '\1"\2"')
    
    # Transform object string object value delimiter to colon delimiter
    string.gsub!(/([{,]\s*)(".+?"|[0-9]+\.?[0-9]*)\s*=>/, '\1\2:')
    
    begin
      result = JSON.parse(string)
    rescue
      raise(Puppet::ParseError, 'str2hash(): Unknown type of hash given')
    end

    return result
  
  end
end
